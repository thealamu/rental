{
    "openapi": "3.0.3",
    "info": {
        "title": "Rental v1 REST API",
        "description": "v1 REST API for [Rental](https://github.com/thealamu/rental).",
        "contact": {
            "name": "thealamu",
            "url": "https://github.com/thealamu"
        },
        "license": {
            "name": "MIT",
            "url": "https://spdx.org/licenses/MIT"
        },
        "version": "0.0.1"
    },
    "servers": [],
    "tags": [
        {
            "name": "car",
            "description": "Interact with actions for cars"
        },
        {
            "name": "customer",
            "description": "Information about and actions for customers"
        },
        {
            "name": "merchant",
            "description": "Information about and actions for merchants"
        }
    ],
    "components": {
        "schemas": {
            "public-car": {
                "title": "Public car",
                "description": "Car made public by a merchant",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 13690
                    },
                    "name": {
                        "type": "string",
                        "example": "Tesla Model 3"
                    },
                    "description": {
                        "type": "string",
                        "example": "Newly purchased white electric sedan."
                    },
                    "charge": {
                        "$ref": "#/components/schemas/charge"
                    },
                    "make": {
                        "description": "Car manufacturer",
                        "type": "string",
                        "example": "Tesla"
                    },
                    "transmission": {
                        "description": "Car transmission type",
                        "type": "string",
                        "enum": [
                            "automatic",
                            "manual"
                        ]
                    },
                    "seatCount": {
                        "description": "Number of seats in the car",
                        "type": "integer"
                    },
                    "imgUrl": {
                        "description": "Link to picture of the car",
                        "type": "string",
                        "format": "uri"
                    },
                    "color": {
                        "description": "Color of the car",
                        "type": "string"
                    },
                    "ac": {
                        "description": "Denotes if car has air conditioning",
                        "type": "boolean"
                    },
                    "electric": {
                        "description": "Denotes if car is electric",
                        "type": "boolean"
                    },
                    "convertible": {
                        "description": "Denotes if car is convertible",
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "charge"
                ]
            },
            "car": {
                "title": "Car",
                "description": "Car",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/public-car"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "isPublic": {
                                "type": "boolean",
                                "default": true
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            },
                            "deletedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            }
                        },
                        "required": [
                            "createdAt",
                            "updatedAt",
                            "deletedAt"
                        ]
                    }
                ]
            },
            "charge": {
                "title": "Charge",
                "description": "Charge placed on a car",
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 65.00
                    },
                    "currency": {
                        "description": "Currency the amount is specified in",
                        "type": "string",
                        "enum": [
                            "USD",
                            "NGN"
                        ]
                    },
                    "per": {
                        "description": "Specifies how long a single charge caters for",
                        "type": "string",
                        "enum": [
                            "day",
                            "hour",
                            "minute"
                        ]
                    }
                }
            },
            "minimal-merchant": {
                "title": "Minimal Merchant",
                "description": "Minimum details about a merchant all users care about",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Awesome Lenders"
                    },
                    "website": {
                        "description": "External website for a merchant",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com"
                    },
                    "publicCars": {
                        "description": "Number of cars the merchant has made public",
                        "type": "integer",
                        "example": 24
                    }
                },
                "required": [
                    "name",
                    "publicCars"
                ]
            },
            "merchant": {
                "title": "Merchant",
                "description": "Merchant",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/minimal-merchant"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "privateCars": {
                                "description": "Number of cars the merchant has made private",
                                "type": "integer",
                                "example": 12
                            },
                            "id": {
                                "type": "integer",
                                "example": 13691
                            },
                            "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            },
                            "deletedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "1985-04-12T23:20:50.52Z"
                            }
                        }
                    }
                ]
            }
        },
        "parameters": {
            "car-id": {
                "name": "car_id",
                "in": "path",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "examples": {
            "public-cars-list": {
                "value": [
                    {
                        "id": 13690,
                        "name": "Model 3",
                        "description": "Newly acquired and repainted white sedan",
                        "charge": {
                            "currency": "USD",
                            "amount": 15.50,
                            "per": "hour"
                        },
                        "make": "Tesla",
                        "seatCount": 3,
                        "color": "velvet",
                        "electric": true,
                        "convertible": false
                    },
                    {
                        "id": 12468,
                        "name": "Audi 80",
                        "description": "Wine colored Audi with a trunk the size of a truck",
                        "charge": {
                            "currency": "NGN",
                            "amount": 8000.00,
                            "per": "day"
                        }
                    }
                ]
            }
        }
    },
    "paths": {
        "/cars": {
            "get": {
                "summary": "List all cars",
                "description": "List all cars merchants have made public",
                "tags": [
                    "car"
                ],
                "operationId": "cars/list-all-public",
                "responses": {
                    "200": {
                        "description": "response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/public-car"
                                    }
                                },
                                "examples": {
                                    "default": {
                                        "$ref": "#/components/examples/public-cars-list"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars/{car_id}": {
            "get": {
                "summary": "Get a car",
                "description": "Retrieve all information about a car",
                "tags": [
                    "car"
                ],
                "operationId": "cars/get",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/car-id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/public-car"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/merchants/{merchant}": {
            "get": {
                "summary": "Get a merchant",
                "description": "Get info about a merchant",
                "tags": [
                    "merchant"
                ],
                "operationId": "merchants/get",
                "parameters": [
                    {
                        "name": "merchant",
                        "in": "path",
                        "description": "Name of a merchant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/minimal-merchant"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/merchants/me": {
            "get": {
                "summary": "Authed Merchant Info",
                "description": "Get full info of an authed merchant",
                "operationId": "merchants/account",
                "responses": {
                    "200": {
                        "description": "response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/merchant"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "get": {
                "summary": "Login",
                "description": "Log a user in",
                "operationId": "auth/login",
                "parameters": [
                    {
                        "name": "state_url",
                        "in": "query",
                        "description": "Url to redirect to after a successful log in",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://localhost:8080"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "auth successful"
                    }
                }
            }
        }
    }
}